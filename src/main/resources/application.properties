spring.application.name=app
spring.datasource.url=jdbc:postgresql://localhost:5432/annuaire
spring.datasource.username=postgres
spring.datasource.password=anais
spring.datasource.driver-class-name=org.postgresql.Driver


spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
debug=true

spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=HikariPool-1
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000

L'erreur "Port 8080 was already in use" signifie qu'un autre processus utilise déjà le port 8080 sur votre machine. Cela peut empêcher votre application Spring Boot de démarrer correctement. Voici comment résoudre ce problème :
Solution 1 : Identifier le processus utilisant le port 8080
Sous Windows

Ouvrez un terminal (CMD ou PowerShell) et tapez :

netstat -ano | findstr :8080

Vous verrez une ligne comme celle-ci si un processus utilise le port 8080 :

TCP    0.0.0.0:8080    0.0.0.0:0    LISTENING    1234

Le dernier nombre (par exemple 1234) correspond au PID (Process ID) du processus.

Identifiez le processus avec ce PID :

tasklist | findstr 1234

Cela vous dira quel programme utilise le port.

Arrêtez le processus :

taskkill /PID 1234 /F

Sous Linux/Mac

Ouvrez un terminal et tapez :

lsof -i :8080

Cela affichera une ligne similaire à :

java     1234  user  ...  TCP *:8080 (LISTEN)

Le numéro 1234 est le PID du processus.

Arrêtez le processus :

kill -9 1234

Solution 2 : Modifier le port de votre application Spring Boot

Si vous ne voulez pas libérer le port 8080, vous pouvez modifier le port utilisé par votre application Spring Boot.
Dans le fichier application.properties :

Ajoutez cette ligne :

server.port=8081